#include "CustomModel.h"
#include "MapGeometryLoader.h"
#include "boost/filesystem/operations.hpp"

#include <string>
#include <iostream>
#include <fstream>
#include <sstream>

// public 
CustomModel::CustomModel(const std::shared_ptr<ModelEntry> model, const std::string& name)
	: model(model)
	, name(name)
{
}

CustomModel::~CustomModel()
{
	model.reset();
}

void CustomModel::writeToFile()
{
	std::string file = getModelFileName();
	if (boost::filesystem::exists(file))
	{
		return;
	}
	else
	{
		std::ofstream obj;
		obj.open(file);
		if (!obj)
		{
			return;
		}
		obj << "# generated by MQ2Nav CustomModel\n";
		obj << "g " << name << "\n";

		for (const auto& vert : model->verts)
		{
			obj << "v " << vert.x << " " << vert.y << " " << vert.z << "\n";
		}

		obj << "\n";
		for (const auto& poly : model->polys)
		{
			obj << "f " << poly.v1 + 1 << " " << poly.v2 + 1 << " " << poly.v3 + 1 << "\n";
		} 
		obj.close();
	}
}

// private
std::string CustomModel::getModelFileName()
{
	std::stringstream fileName;
	fileName << config.GetOutputPath() << "\\MQ2Nav\\models\\" << name << ".obj";
	return fileName.str();
}